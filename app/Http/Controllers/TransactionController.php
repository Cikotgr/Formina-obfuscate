<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2023-10-31 03:38:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace App\Http\Controllers; use App\Models\DetailTransaction; use App\Models\Profile; use App\Models\ShopCart; use App\Models\Transaction; use Illuminate\Http\Request; use Illuminate\Support\Facades\Auth; use RealRashid\SweetAlert\Facades\Alert; class TransactionController extends Controller { public function beforeCheckout() { goto UNuFq; GZIM2: $profile = $profiles[0]; goto aHpPb; UNuFq: $userId = Auth::user()->id; goto EVirs; zc6Q8: return view('product.checkout', compact('profile', 'total_payment', 'shopcart')); goto zlUbk; EVirs: $profiles = Profile::where('user_id', '=', Auth::user()->id)->get(); goto GZIM2; QQJ3p: $total_payment = 0; goto wCou_; ciYY_: MOVpU: goto zc6Q8; wCou_: foreach ($shopcart as $shopitem) { goto ZSZ_t; bAChC: mtUp2: goto lbt98; jGwdV: $total_payment += $shopitem->quantity * $getPrice; goto bAChC; ZSZ_t: $getPrice = $shopitem->fkProduct->price; goto jGwdV; lbt98: } goto ciYY_; aHpPb: $shopcart = ShopCart::where('user_id', '=', $userId)->get(); goto QQJ3p; zlUbk: } public function checkout(Request $request) { goto Ix8y_; Ix8y_: $userId = Auth::user()->id; goto b0ea4; BFLoz: $file = $request->file('photoTranfer'); goto raAwr; grHLD: return redirect()->back(); goto EcMOA; b0ea4: $shopcart = ShopCart::where('user_id', '=', $userId)->get(); goto BFLoz; raAwr: $filename = time() . '.' . $file->getClientOriginalExtension(); goto Xzfik; Xzfik: $path = $file->storeAs('public/tranfer', $filename); goto Fw5PY; n4htE: try { goto iB_Fn; iB_Fn: $transaction_data = ['user_id' => $userId, 'total_payment' => $request->totalPayment, 'delivery_service_id' => $request->delivery, 'address' => $request->address, 'photo_tranfer' => $filepath]; goto e_vkz; nTfk5: foreach ($shopcart as $shopitem) { try { DetailTransaction::create(['product_id' => $shopitem->product_id, 'quantity' => $shopitem->quantity, 'transaction_id' => $transaction->id]); $shopitem->delete(); } catch (\Exception $e) { } RG8Kg: } goto TgEsV; TgEsV: UJGZE: goto IkHbO; IkHbO: Alert::success('Berhasil', 'Pesanan berhasil ditambahkan'); goto sk4nh; e_vkz: $transaction = Transaction::create($transaction_data); goto nTfk5; sk4nh: } catch (\Exception $e) { Alert::error('Gagal', 'Gagal melakukan pemesanan'); } goto grHLD; Fw5PY: $filepath = str_replace('public/', '', $path); goto n4htE; EcMOA: } public function index() { $transactions = Transaction::all(); return view('admin.transaksi.index', compact('transactions')); } public function detail($id) { goto kMW20; kMW20: $detail = DetailTransaction::where('transaction_id', '=', $id)->get(); goto wOYkT; wOYkT: $transaction = Transaction::find($id); goto vxAtA; vxAtA: return view('admin.transaksi.detail', compact('detail', 'transaction')); goto i993Y; i993Y: } public function updateStatus($id) { goto dBCbi; fgaN9: try { $transaction->update(['status' => 'paid']); Alert::success('Berhasil', 'Konfirmasi berhasil'); } catch (\Exception $e) { Alert::error('Gagal', 'Konfirmasi gagal'); } goto sAZxi; dBCbi: $transaction = Transaction::find($id); goto fgaN9; sAZxi: return redirect()->route('transaksi.index'); goto iW_Tc; iW_Tc: } }
