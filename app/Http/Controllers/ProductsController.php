<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2023-10-31 03:38:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace App\Http\Controllers; use App\Models\Product; use App\Models\User; use Illuminate\Http\Request; use Illuminate\Support\Facades\Auth; use RealRashid\SweetAlert\Facades\Alert; class ProductsController extends Controller { public function index() { goto Hu0h4; Hu0h4: if (Product::exists()) { goto z4cVO; } goto Qyl1M; Qyl1M: $products = null; goto v_lu3; THtn4: $products = Product::all(); goto gTksx; Ia1fC: z4cVO: goto THtn4; v_lu3: goto kGl10; goto Ia1fC; ddNFE: return view('admin.product.index', compact('products')); goto tT2VG; gTksx: kGl10: goto ddNFE; tT2VG: } public function create() { } public function store(Request $request) { goto KvPat; Jc91D: $data = ['user_id' => $adminId, 'product_name' => $request->produkName, 'stock' => $request->stock, 'price' => $request->price, 'photo' => $path, 'description' => $request->description]; goto QFdPQ; BTf3O: $path = str_replace('public/', '', $path); goto Jc91D; YjKJc: $path = $file->storeAs('public/product', $filename); goto BTf3O; yqf3V: $file = $request->file('photo'); goto C0JS7; KvPat: $adminId = Auth::user()->id; goto yqf3V; QFdPQ: try { goto YIDkG; KDJTL: return redirect()->route('product.index'); goto QWWJ6; l87Uo: Alert::success('Berhasil', 'Produk Berhasil ditambahkan'); goto KDJTL; YIDkG: Product::create($data); goto l87Uo; QWWJ6: } catch (\Exception $th) { goto sbn4h; L7myf: Alert::error('Gagal', 'Produk Gagal Ditambahkan'); goto QW2i8; sbn4h: dd($th); goto L7myf; QW2i8: return redirect()->route('product.index'); goto FYdIW; FYdIW: } goto WxXA0; C0JS7: $filename = time() . '.' . $file->getClientOriginalExtension(); goto YjKJc; WxXA0: } public function show(string $id) { $product = Product::find($id); return view('product.detail', compact('product')); } public function edit(string $id) { } public function update(Request $request, string $id) { goto Qb16m; vc3N7: $path = $file->storeAs('public/' . $product->photo); goto lspsx; KK14T: goto BHr8B; goto QJzIN; QJzIN: GS2bL: goto iv14I; aZnYu: BHr8B: goto O_osb; SVZUG: $product = Product::find($id); goto ubLNA; OrbYY: $product->update(['user_id' => $adminId, 'stock' => $request->stock, 'product_name' => $request->produkName, 'price' => $request->price, 'description' => $request->description]); goto KK14T; iv14I: $file = $request->file('photo'); goto vc3N7; Qb16m: $adminId = Auth::id(); goto SVZUG; lspsx: $path = str_replace('public/', '', $path); goto REzZ9; REzZ9: $product->update(['photo' => $path, 'user_id' => $adminId, 'stock' => $request->stock, 'product_name' => $request->produkName, 'price' => $request->price, 'description' => $request->description]); goto aZnYu; ubLNA: if ($request->hasFile('photo')) { goto GS2bL; } goto OrbYY; O_osb: return redirect()->back(); goto YRWiW; YRWiW: } public function destroy(string $id) { try { goto Ixsgd; O8j8O: $product->delete(); goto GW5fj; GW5fj: Alert::success('Berhasil', 'Produk berhasil dihapus'); goto QCe3j; Ixsgd: $product = Product::find($id); goto O8j8O; QCe3j: } catch (\Exception $e) { Alert::error('Gagal', 'Produk gagal dihapus'); } return redirect()->back(); } }
