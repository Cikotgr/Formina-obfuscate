<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2023-10-31 03:38:17              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace App\Http\Requests\Auth; use Illuminate\Auth\Events\Lockout; use Illuminate\Foundation\Http\FormRequest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\RateLimiter; use Illuminate\Support\Str; use Illuminate\Validation\ValidationException; class LoginRequest extends FormRequest { public function authorize() : bool { return true; } public function rules() : array { return ['email' => ['required', 'string', 'email'], 'password' => ['required', 'string']]; } public function authenticate() : void { goto F7r_p; YeIlX: RateLimiter::hit($this->throttleKey()); goto usJdh; I4aOv: if (Auth::attempt($this->only('email', 'password'), $this->boolean('remember'))) { goto Mh10r; } goto YeIlX; usJdh: throw ValidationException::withMessages(['email' => trans('auth.failed')]); goto BUoFl; BUoFl: Mh10r: goto jSkIL; jSkIL: RateLimiter::clear($this->throttleKey()); goto X7E_C; F7r_p: $this->ensureIsNotRateLimited(); goto I4aOv; X7E_C: } public function ensureIsNotRateLimited() : void { goto jk_n5; jk_n5: if (RateLimiter::tooManyAttempts($this->throttleKey(), 5)) { goto StUWl; } goto PB0R0; UcfRW: event(new Lockout($this)); goto wAIHg; POCfc: StUWl: goto UcfRW; F4rTc: throw ValidationException::withMessages(['email' => trans('auth.throttle', ['seconds' => $seconds, 'minutes' => ceil($seconds / 60)])]); goto ZWkSP; PB0R0: return; goto POCfc; wAIHg: $seconds = RateLimiter::availableIn($this->throttleKey()); goto F4rTc; ZWkSP: } public function throttleKey() : string { return Str::transliterate(Str::lower($this->input('email')) . '|' . $this->ip()); } }
